
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'sandbox_datalake'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'sandbox_datalake'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

models:
  sandbox_datalake:
    +materialized: ephemeral
    bronze_to_silver:
      pokemon:
        final:
          +materialized: table
          showdown:
            sources:
              +pre-hook:
                - >
                  {% set source = var('source', 'dav') %}
                  {% set allowed_sources = ['dav', 'smogon'] %}
                  {% if source not in allowed_sources %}
                    {{ exceptions.raise_compiler_error("Invalid value for 'source': " ~ source ~ ". Allowed values: " ~ allowed_sources) }}
                  {% endif %}
              +post-hook:
                - >
                  {% set version = var('release_version', '-1') %}
                  {% set source = var('source', 'dav') %}
                  {% if source == 'dav' %}
                  COPY {{ this }}
                  TO 's3://sandbox-datalake-silver/pokemon/showdown/dav/{{ version }}/{{ this.name }}.parquet'
                  (FORMAT PARQUET, COMPRESSION 'snappy');
                  {% elif source == 'smogon' %}
                  COPY {{ this }}
                  TO 's3://sandbox-datalake-silver/pokemon/showdown/smogon/{{ this.name }}.parquet'
                  (FORMAT PARQUET, COMPRESSION 'snappy');
                  {% endif %}
            battlelogs:
              +post-hook:
                - >
                  {% set date = var('date', '-1') %}
                  COPY {{ this }}
                  TO 's3://sandbox-datalake-silver/pokemon/showdown/battlelogs/daily_flat/{{ date }}.parquet'
                  (FORMAT PARQUET, COMPRESSION 'snappy');
      davlab:
        final:
          +materialized: table
          notion:
            +post-hook:
              - >
                {% set notion_date = var('notion_date', '-1') %}
                COPY {{ this }}
                TO 's3://sandbox-datalake-silver/davlab/notion/{{ notion_date }}/{{ this.name }}.parquet'
                (FORMAT PARQUET, COMPRESSION 'snappy')
    silver_to_silver:
      pokemon:
        final:
          +materialized: table
          showdown:
            battlelogs:
              +post-hook:
                - >
                  COPY {{ this }}
                  TO 's3://sandbox-datalake-silver/pokemon/showdown/battlelogs/{{ this.name }}.parquet'
                  (FORMAT PARQUET, COMPRESSION 'snappy')
    silver_to_gold:
      pokemon:
        final:
          +materialized: table
          showdown:
            sources:
              +pre-hook:
                - >
                  {% set source = var('source', 'dav') %}
                  {% set allowed_sources = ['dav', 'smogon'] %}
                  {% if source not in allowed_sources %}
                    {{ exceptions.raise_compiler_error("Invalid value for 'source': " ~ source ~ ". Allowed values: " ~ allowed_sources) }}
                  {% endif %}
              +post-hook:
                - >
                  {% set version = var('release_version', '-1') %}
                  {% set source = var('source', 'dav') %}
                  {% set is_latest = var('is_latest', 'no') %}
                  {% if source == 'dav' %}
                    COPY {{ this }}
                    TO 's3://sandbox-datalake-gold/pokemon/showdown/dav/{{ version }}/{{ this.name }}.parquet'
                    (FORMAT PARQUET, COMPRESSION 'snappy');
                    {% if is_latest == 'yes' %}
                      COPY {{ this }}
                      TO 's3://sandbox-datalake-gold/pokemon/showdown/dav/latest/{{ this.name }}.parquet'
                      (FORMAT PARQUET, COMPRESSION 'snappy');
                    {% endif %}
                  {% endif %}
                  {% if source == 'smogon' %}
                    COPY {{ this }}
                    TO 's3://sandbox-datalake-gold/pokemon/showdown/smogon/{{ this.name }}.parquet'
                    (FORMAT PARQUET, COMPRESSION 'snappy');
                  {% endif %}
            diff_dav_releases:
              +post-hook:
                - >
                  {% set version_old = var('release_version_old', '-1') %}
                  {% set version_new = var('release_version_new', '-1') %}
                  COPY {{ this }}
                  TO 's3://sandbox-datalake-gold/pokemon/showdown/diff_dav_releases/{{ version_old }}_{{ version_new }}_{{ this.name }}.parquet'
                  (FORMAT PARQUET, COMPRESSION 'snappy')
            diff_dav_smogon:
              +post-hook:
                - >
                  {% set version = var('release_version', '-1') %}
                  COPY {{ this }}
                  TO 's3://sandbox-datalake-gold/pokemon/showdown/diff_dav_smogon/{{ version }}/{{ this.name }}.parquet'
                  (FORMAT PARQUET, COMPRESSION 'snappy')
            battlelogs:
              +post-hook:
                - >
                  COPY {{ this }}
                  TO 's3://sandbox-datalake-gold/pokemon/showdown/battlelogs/{{ this.name }}.parquet'
                  (FORMAT PARQUET, COMPRESSION 'snappy')
      davlab:
        final:
          +materialized: table
          notion:
            +post-hook:
              - >
                {% set notion_date = var('notion_date', '-1') %}
                COPY {{ this }}
                TO 's3://sandbox-datalake-gold/davlab/notion/{{ notion_date }}/{{ this.name }}.parquet'
                (FORMAT PARQUET, COMPRESSION 'snappy')